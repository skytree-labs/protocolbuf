// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: gamefee_manager.proto

package gamefee_manager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExchangeType int32

const (
	ExchangeType_POINT_TO_TOKEN ExchangeType = 0
	ExchangeType_TOKEN_TO_POINT ExchangeType = 1
)

// Enum value maps for ExchangeType.
var (
	ExchangeType_name = map[int32]string{
		0: "POINT_TO_TOKEN",
		1: "TOKEN_TO_POINT",
	}
	ExchangeType_value = map[string]int32{
		"POINT_TO_TOKEN": 0,
		"TOKEN_TO_POINT": 1,
	}
)

func (x ExchangeType) Enum() *ExchangeType {
	p := new(ExchangeType)
	*p = x
	return p
}

func (x ExchangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExchangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_gamefee_manager_proto_enumTypes[0].Descriptor()
}

func (ExchangeType) Type() protoreflect.EnumType {
	return &file_gamefee_manager_proto_enumTypes[0]
}

func (x ExchangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExchangeType.Descriptor instead.
func (ExchangeType) EnumDescriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{0}
}

type ReturnGameFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId   int64  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	To        string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	CrossTxId int64  `protobuf:"varint,3,opt,name=cross_tx_id,json=crossTxId,proto3" json:"cross_tx_id,omitempty"`
	TossId    int64  `protobuf:"varint,4,opt,name=toss_id,json=tossId,proto3" json:"toss_id,omitempty"`
	TokenName string `protobuf:"bytes,5,opt,name=token_name,json=tokenName,proto3" json:"token_name,omitempty"`
}

func (x *ReturnGameFeeRequest) Reset() {
	*x = ReturnGameFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamefee_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnGameFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnGameFeeRequest) ProtoMessage() {}

func (x *ReturnGameFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamefee_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnGameFeeRequest.ProtoReflect.Descriptor instead.
func (*ReturnGameFeeRequest) Descriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{0}
}

func (x *ReturnGameFeeRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ReturnGameFeeRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ReturnGameFeeRequest) GetCrossTxId() int64 {
	if x != nil {
		return x.CrossTxId
	}
	return 0
}

func (x *ReturnGameFeeRequest) GetTossId() int64 {
	if x != nil {
		return x.TossId
	}
	return 0
}

func (x *ReturnGameFeeRequest) GetTokenName() string {
	if x != nil {
		return x.TokenName
	}
	return ""
}

type ReturnGameFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReturnGameFeeResponse) Reset() {
	*x = ReturnGameFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamefee_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnGameFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnGameFeeResponse) ProtoMessage() {}

func (x *ReturnGameFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gamefee_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnGameFeeResponse.ProtoReflect.Descriptor instead.
func (*ReturnGameFeeResponse) Descriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ReturnGameFeeResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ClaimGameFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId int64  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Token   string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Amount  string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	TxHash  string `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxTime  string `protobuf:"bytes,6,opt,name=tx_time,json=txTime,proto3" json:"tx_time,omitempty"`
}

func (x *ClaimGameFeeRequest) Reset() {
	*x = ClaimGameFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamefee_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimGameFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimGameFeeRequest) ProtoMessage() {}

func (x *ClaimGameFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamefee_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimGameFeeRequest.ProtoReflect.Descriptor instead.
func (*ClaimGameFeeRequest) Descriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{2}
}

func (x *ClaimGameFeeRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ClaimGameFeeRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ClaimGameFeeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ClaimGameFeeRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ClaimGameFeeRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *ClaimGameFeeRequest) GetTxTime() string {
	if x != nil {
		return x.TxTime
	}
	return ""
}

type ClaimGameFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ClaimGameFeeResponse) Reset() {
	*x = ClaimGameFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamefee_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimGameFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimGameFeeResponse) ProtoMessage() {}

func (x *ClaimGameFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gamefee_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimGameFeeResponse.ProtoReflect.Descriptor instead.
func (*ClaimGameFeeResponse) Descriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{3}
}

func (x *ClaimGameFeeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ClaimGameFeeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ExchangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointId     int64        `protobuf:"varint,1,opt,name=point_id,json=pointId,proto3" json:"point_id,omitempty"`
	TokenAmount float64      `protobuf:"fixed64,2,opt,name=token_amount,json=tokenAmount,proto3" json:"token_amount,omitempty"`
	Rate        float64      `protobuf:"fixed64,3,opt,name=rate,proto3" json:"rate,omitempty"`
	User        string       `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	PushTx      string       `protobuf:"bytes,5,opt,name=push_tx,json=pushTx,proto3" json:"push_tx,omitempty"`
	PushTime    int64        `protobuf:"varint,6,opt,name=push_time,json=pushTime,proto3" json:"push_time,omitempty"`
	ClaimTx     string       `protobuf:"bytes,7,opt,name=claim_tx,json=claimTx,proto3" json:"claim_tx,omitempty"`
	ClaimTime   int64        `protobuf:"varint,8,opt,name=claim_time,json=claimTime,proto3" json:"claim_time,omitempty"`
	Direct      ExchangeType `protobuf:"varint,9,opt,name=direct,proto3,enum=gamefee_manager.api.ExchangeType" json:"direct,omitempty"`
}

func (x *ExchangeRequest) Reset() {
	*x = ExchangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamefee_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRequest) ProtoMessage() {}

func (x *ExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamefee_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRequest) Descriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{4}
}

func (x *ExchangeRequest) GetPointId() int64 {
	if x != nil {
		return x.PointId
	}
	return 0
}

func (x *ExchangeRequest) GetTokenAmount() float64 {
	if x != nil {
		return x.TokenAmount
	}
	return 0
}

func (x *ExchangeRequest) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ExchangeRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ExchangeRequest) GetPushTx() string {
	if x != nil {
		return x.PushTx
	}
	return ""
}

func (x *ExchangeRequest) GetPushTime() int64 {
	if x != nil {
		return x.PushTime
	}
	return 0
}

func (x *ExchangeRequest) GetClaimTx() string {
	if x != nil {
		return x.ClaimTx
	}
	return ""
}

func (x *ExchangeRequest) GetClaimTime() int64 {
	if x != nil {
		return x.ClaimTime
	}
	return 0
}

func (x *ExchangeRequest) GetDirect() ExchangeType {
	if x != nil {
		return x.Direct
	}
	return ExchangeType_POINT_TO_TOKEN
}

type ExchangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ExchangeResponse) Reset() {
	*x = ExchangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamefee_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeResponse) ProtoMessage() {}

func (x *ExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gamefee_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeResponse.ProtoReflect.Descriptor instead.
func (*ExchangeResponse) Descriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{5}
}

func (x *ExchangeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExchangeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type OnTokenExchangedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      string  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	ClaimTx   string  `protobuf:"bytes,2,opt,name=claim_tx,json=claimTx,proto3" json:"claim_tx,omitempty"`
	ClaimTime int64   `protobuf:"varint,3,opt,name=claim_time,json=claimTime,proto3" json:"claim_time,omitempty"`
	Ids       []int32 `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *OnTokenExchangedRequest) Reset() {
	*x = OnTokenExchangedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamefee_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnTokenExchangedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnTokenExchangedRequest) ProtoMessage() {}

func (x *OnTokenExchangedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamefee_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnTokenExchangedRequest.ProtoReflect.Descriptor instead.
func (*OnTokenExchangedRequest) Descriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{6}
}

func (x *OnTokenExchangedRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *OnTokenExchangedRequest) GetClaimTx() string {
	if x != nil {
		return x.ClaimTx
	}
	return ""
}

func (x *OnTokenExchangedRequest) GetClaimTime() int64 {
	if x != nil {
		return x.ClaimTime
	}
	return 0
}

func (x *OnTokenExchangedRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type OnTokenExchangedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *OnTokenExchangedResponse) Reset() {
	*x = OnTokenExchangedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamefee_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnTokenExchangedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnTokenExchangedResponse) ProtoMessage() {}

func (x *OnTokenExchangedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gamefee_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnTokenExchangedResponse.ProtoReflect.Descriptor instead.
func (*OnTokenExchangedResponse) Descriptor() ([]byte, []int) {
	return file_gamefee_manager_proto_rawDescGZIP(), []int{7}
}

func (x *OnTokenExchangedResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OnTokenExchangedResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_gamefee_manager_proto protoreflect.FileDescriptor

var file_gamefee_manager_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67, 0x61, 0x6d, 0x65, 0x66, 0x65, 0x65,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x22, 0x99, 0x01, 0x0a,
	0x14, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x54, 0x78, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x13, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x14, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0xa2, 0x02, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x75, 0x73, 0x68, 0x54, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x78,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x78, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x38, 0x0a, 0x10, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x79, 0x0a, 0x17, 0x4f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x78, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x40,
	0x0a, 0x18, 0x4f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x2a, 0x36, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x54, 0x4f, 0x4b,
	0x45, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x54, 0x4f,
	0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x32, 0xaf, 0x03, 0x0a, 0x0e, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x65, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x68, 0x0a, 0x0d, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x12, 0x29, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x66, 0x65,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x47, 0x61,
	0x6d, 0x65, 0x46, 0x65, 0x65, 0x12, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x66, 0x65, 0x65, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x08,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x66,
	0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x10, 0x4f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f,
	0x3b, 0x67, 0x61, 0x6d, 0x65, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gamefee_manager_proto_rawDescOnce sync.Once
	file_gamefee_manager_proto_rawDescData = file_gamefee_manager_proto_rawDesc
)

func file_gamefee_manager_proto_rawDescGZIP() []byte {
	file_gamefee_manager_proto_rawDescOnce.Do(func() {
		file_gamefee_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_gamefee_manager_proto_rawDescData)
	})
	return file_gamefee_manager_proto_rawDescData
}

var file_gamefee_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gamefee_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_gamefee_manager_proto_goTypes = []interface{}{
	(ExchangeType)(0),                // 0: gamefee_manager.api.ExchangeType
	(*ReturnGameFeeRequest)(nil),     // 1: gamefee_manager.api.ReturnGameFeeRequest
	(*ReturnGameFeeResponse)(nil),    // 2: gamefee_manager.api.ReturnGameFeeResponse
	(*ClaimGameFeeRequest)(nil),      // 3: gamefee_manager.api.ClaimGameFeeRequest
	(*ClaimGameFeeResponse)(nil),     // 4: gamefee_manager.api.ClaimGameFeeResponse
	(*ExchangeRequest)(nil),          // 5: gamefee_manager.api.ExchangeRequest
	(*ExchangeResponse)(nil),         // 6: gamefee_manager.api.ExchangeResponse
	(*OnTokenExchangedRequest)(nil),  // 7: gamefee_manager.api.OnTokenExchangedRequest
	(*OnTokenExchangedResponse)(nil), // 8: gamefee_manager.api.OnTokenExchangedResponse
}
var file_gamefee_manager_proto_depIdxs = []int32{
	0, // 0: gamefee_manager.api.ExchangeRequest.direct:type_name -> gamefee_manager.api.ExchangeType
	1, // 1: gamefee_manager.api.GameFeeManager.ReturnGameFee:input_type -> gamefee_manager.api.ReturnGameFeeRequest
	3, // 2: gamefee_manager.api.GameFeeManager.ClaimGameFee:input_type -> gamefee_manager.api.ClaimGameFeeRequest
	5, // 3: gamefee_manager.api.GameFeeManager.Exchange:input_type -> gamefee_manager.api.ExchangeRequest
	7, // 4: gamefee_manager.api.GameFeeManager.OnTokenExchanged:input_type -> gamefee_manager.api.OnTokenExchangedRequest
	2, // 5: gamefee_manager.api.GameFeeManager.ReturnGameFee:output_type -> gamefee_manager.api.ReturnGameFeeResponse
	4, // 6: gamefee_manager.api.GameFeeManager.ClaimGameFee:output_type -> gamefee_manager.api.ClaimGameFeeResponse
	6, // 7: gamefee_manager.api.GameFeeManager.Exchange:output_type -> gamefee_manager.api.ExchangeResponse
	8, // 8: gamefee_manager.api.GameFeeManager.OnTokenExchanged:output_type -> gamefee_manager.api.OnTokenExchangedResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gamefee_manager_proto_init() }
func file_gamefee_manager_proto_init() {
	if File_gamefee_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gamefee_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnGameFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamefee_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnGameFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamefee_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimGameFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamefee_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimGameFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamefee_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamefee_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamefee_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnTokenExchangedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamefee_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnTokenExchangedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gamefee_manager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gamefee_manager_proto_goTypes,
		DependencyIndexes: file_gamefee_manager_proto_depIdxs,
		EnumInfos:         file_gamefee_manager_proto_enumTypes,
		MessageInfos:      file_gamefee_manager_proto_msgTypes,
	}.Build()
	File_gamefee_manager_proto = out.File
	file_gamefee_manager_proto_rawDesc = nil
	file_gamefee_manager_proto_goTypes = nil
	file_gamefee_manager_proto_depIdxs = nil
}
